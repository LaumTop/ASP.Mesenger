@rendermode InteractiveServer
@page "/Register"
@using System.Net
@using System.Net.Mail
@using System.Text
@using System.Text.RegularExpressions

<img class="userIcon" src="bootstrap/Pictures/User.png" />
<div class="square"></div>

<div class="inputData">
    <input class="@GetUsernameClass()" type="text" id="username" @bind="username" placeholder="Login" />
    <input class="@GetPasswordClass()" type="password" id="password" @bind="password" placeholder="Password" />
    <input class="@GetEmailClass()" type="email" id="email" @bind="email" placeholder="example@gmail.com" />
</div>
<button class="login" @onclick="Registers">Register</button>

@code {
    [Inject]
    NavigationManager NavigationManager { get; set; }
    List<KeyValuePair<string, string>> ConfirmRegister = new List<KeyValuePair<string, string>>();
    List<string> secretCodes = new List<string>();
    private string username = "";
    private string password = "";
    private string email = "";

    private bool isUsernameValid = true;
    private bool isPasswordValid = true;
    private bool isEmailValid = true;

    private void Registers()
    {
        isUsernameValid = !string.IsNullOrEmpty(username) && username.Length >= 4;
        isPasswordValid = !string.IsNullOrEmpty(password);
        isEmailValid = IsValidEmail(email);

        if (isUsernameValid && isPasswordValid && isEmailValid)
        {
            Random random = new Random();
            bool finish = true;

            while (finish)
            {
                StringBuilder code = new StringBuilder();
                for (int i = 0; i < 8; i++)
                {
                    code.Append(random.Next(10));
                }

                if (!secretCodes.Contains(code.ToString()))
                {
                    finish = false;
                    secretCodes.Add(code.ToString());
                    ConfirmRegister.Add(new KeyValuePair<string, string>(code.ToString(), email));

                    MailAddress sender = new MailAddress("LaumTopMessenger@gmail.com", "Laumtop Messenger");
                    MailAddress to = new MailAddress(email);
                    MailMessage message = new MailMessage(sender, to);
                    message.Subject = "Finish Register";
                    message.Body = "<h2>Please enter this code: " + code + "</h2>";
                    message.IsBodyHtml = true;
                    SmtpClient smtp = new SmtpClient("smtp.gmail.com", 587);

                    smtp.Credentials = new NetworkCredential("LaumTopMessenger@gmail.com", "");
                    smtp.EnableSsl = true;

                    // smtp.Send(message);
                    Console.WriteLine("123213");
                    NavigationManager.NavigateTo("/Confirm");
                }
            }
        }
        else
        {
            Console.WriteLine($"{isUsernameValid} + {isPasswordValid} + {isEmailValid}");
        }
    }
    private string GetUsernameClass()
    {
        return isUsernameValid ? "Register_Login" : "Register_Login invalid";
    }

    private string GetPasswordClass()
    {
        return isPasswordValid ? "Register_Password" : "Register_Password invalid";
    }

    private string GetEmailClass()
    {
        return isEmailValid ? "Register_Email" : "Register_Email invalid invalid-email";
    }

    public static bool IsValidEmail(string email)
    {
        if (string.IsNullOrWhiteSpace(email))
        {
            return false;
        }

        try
        {
            string pattern = @"^[^@\s]+@[^@\s]+\.[^@\s]+$";
            Regex regex = new Regex(pattern, RegexOptions.IgnoreCase);
            return regex.IsMatch(email);
        }
        catch (Exception)
        {
            return false;
        }
    }
}
